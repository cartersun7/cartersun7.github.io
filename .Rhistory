sep = "!!"
) %>%
filter(!is.na(education)) %>%
group_by(county, education) %>%
summarize(estimate = sum(estimate)) %>%
subset(county == "081")%>%
mutate (
education =
case_when(
education %in% c("No schooling completed","Nursery to 4th grade","5th and 6th grade","7th and 8th grade","9th grade","10th grade", "11th grade", "12th grade, no diploma") ~ "Less than high school diploma",
education %in% c("High school graduate (includes equivalency)") ~ "High school graduate (includes equivalency)",
education %in% c("Associate's degree", "Some college, less than 1 year", "Some college, 1 or more years, no degree") ~ "Some college or associate's degree",
education %in% c("Bachelor's degree", "Doctorate degree", "Master's degree", "Professional school degree") ~ "Bachelor's degree or higher"
)
) %>%
group_by(county, education) %>%
summarize(estimate = sum(estimate))
total_white_latinx <-
bay_education_ethnicity %>%
group_by(county, education) %>%
summarize(estimate = -1*sum(estimate))
not_white_not_latinx <-
rbind(total, total_white_latinx)
View(not_white_not_latinx)
i
not_white_not_latinx <-
rbind(total, total_white_latinx) %>%
group_by(county, education) %>%
summarize(estimate = sum(estimate))
View(not_white_not_latinx)
not_white_not_latinx <-
rbind(total, total_white_latinx) %>%
group_by(county, education) %>%
summarize(estimate = sum(estimate)) %>%
mutate(ethnicity = "Not white, not Latinx")
View(not_white_not_latinx)
bay_education_ethnicity <-
rbind(bay_education_ethnicity, not_white_not_latinx)
View(bay_education_ethnicity)
bay_ethnicity_total <-
bay_education_ethnicity %>%
group_by(ethnicity) %>%
summarize(estimate = sum(estimate)) %>%
mutate(education = "Total")
bay_education_ethnicity %>%
group_by(education, ethnicity) %>%
summarize(estimate = sum(estimate)) %>%
rbind(bay_ethnicity_total) %>%
ggplot() +
geom_bar(
aes(
x = education %>% factor(levels = rev(c("Total","Less than high school diploma","High school graduate (includes equivalency)","Some college or associate's degree", "Bachelor's degree or higher"))),
y = estimate,
fill = ethnicity %>% factor(levels = rev(unique(bay_education_ethnicity$ethnicity)))
),
stat = "identity",
position = "fill"
) +
labs(
x = "Educational Attainment",
y = "Proportion of population 25 years or older",
title = "San Mateo County Educational\nAttainment by Ethnicity",
fill = "Ethnicity of householder"
) +
coord_flip() +
theme(
legend.position = "bottom",
legend.direction = "vertical"
)  +
guides(
fill = guide_legend(
reverse = T
)
)
knitr::opts_chunk$set(include = TRUE)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(censusapi)
library(sf)
library(mapview)
library(tigris)
Sys.setenv(CENSUS_KEY="c8aa67e4086b4b5ce3a8717f59faa9a28f611dab")
acs_vars_2019_5yr <-
listCensusMetadata(
name = "2019/acs/acs5",
type = "variables"
)
knitr::opts_chunk$set(echo = TRUE)
bay_education_income_tract <-
getCensus(
name = "acs/acs5",
vintage = 2019,
region = "tract:*",
regionin = "state:06+county:001,013,041,055,075,081,085,095,097",
vars = c(
"B06009_001E",
"B06009_002E",
"B06009_003E",
"B19001_001E",
"B19001_014E",
"B19001_015E",
"B19001_016E",
"B19001_017E"
)
) %>%
transmute(
tract = paste0(state, county, tract),
perc_college = 1 - (B06009_002E + B06009_003E) / B06009_001E,
perc_over100k = (B19001_014E + B19001_015E + B19001_016E + B19001_017E) / B19001_001E
) %>%
filter(
!is.na(perc_college),
!is.na(perc_over100k)
)
ggplot() +
geom_point(
data = bay_education_income_tract,
aes(
x = perc_college,
y = perc_over100k
)
)
ggplot() +
geom_point(
data = bay_education_income_tract,
aes(
x = perc_college,
y = perc_over100k
)
) +
geom_point() +
geom_smooth(method = "lm")
ggplot() +
data = bay_education_income_tract,
ggplot(
data = bay_education_income_tract,
aes(
x = perc_college,
y = perc_over100k
)
) +
geom_point() +
geom_smooth(method = "lm")
sumsq_residuals
slope <- 0
yintercept <- mean(bay_education_income_tract$perc_over100k)
best_fit_candidate <- slope * bay_education_income_tract$perc_college + yintercept
residuals <- bay_education_income_tract$perc_over100k - best_fit_candidate
sumsq_residuals <- sum(residuals^2)
sumsq_residuals
ggplot(
data = bay_education_income_tract,
aes(
x = perc_college,
y = perc_over100k
)
) +
geom_point() +
geom_smooth(method = "lm") +
geom_line(
aes(
x = bay_education_income_tract$perc_college,
y = best_fit_candidate
),
color = "red",
size = 1
)
get_sumsq_residuals <- function(x){
slope <- x[1]
yintercept <- x[2]
best_fit_candidate <- slope * bay_education_income_tract$perc_college + yintercept
residuals <- bay_education_income_tract$perc_over100k - best_fit_candidate
sumsq_residuals <- sum(residuals^2)
}
optimization <- optim(c(0,0), get_sumsq_residuals)
optimization
ggplot(
data = bay_education_income_tract,
aes(
x = perc_college,
y = perc_over100k
)
) +
geom_point() +
geom_smooth(method = "lm") +
geom_line(
aes(
x = perc_college,
y = perc_college * optimization$par[1] + optimization$par[2]
),
color = "red",
linetype = 2,
size = 2
)
slope <- optimization$par[1]
yintercept <- optimization$par[2]
best_fit_candidate <- slope * bay_education_income_tract$perc_college + yintercept
residuals <- bay_education_income_tract$perc_over100k - best_fit_candidate
mean(residuals)
slope <- optimization$par[1]
yintercept <- optimization$par[2]
best_fit_candidate <- slope * bay_education_income_tract$perc_college + yintercept
residuals <- bay_education_income_tract$perc_over100k - best_fit_candidate
mean(residuals)
plot(density(residuals))
model <- lm(perc_over100k ~ perc_college, bay_education_income_tract)
summary(model)
predict(model, data.frame(perc_college = 0.5))
pge_avg_kwh %>%
ggplot(
aes(
x = DATE,
y = AVGMONTHLYKWH
)
) +
geom_line() +
geom_smooth(method = "lm") +
labs(
x = "",
y = "Average kBTU/Customer",
title = "Residential Electricity Consumption in PG&E Territories"
)
years <- 2013:2019
quarters <- 1:4
pge_data <- NULL
for(year in years) {
for(quarter in quarters) {
filename <-
paste0(
"pge/PGE_",
year,
"_Q",
quarter,
"_ElectricUsageByZip.csv"
)
temp <- read_csv(filename)
pge_data <-
rbind(pge_data,temp)
}
}
model_pge <- lm(AVGMONTHLYKWH ~ DATE, pge_avg_kwh)
pge_avg_kwh %>%
ggplot(
aes(
x = DATE,
y = model_pge$residuals
)
) +
geom_line() +
geom_smooth(method = "lm", se = F) +
labs(
x = "",
y = "Average kBTU/Customer",
title = "Residuals from previous regression"
)
bay_multiple_tract <-
getCensus(
name = "acs/acs5",
vintage = 2019,
region = "tract:*",
regionin = "state:06+county:001,013,041,055,075,081,085,095,097",
vars = c(
"B06009_001E",
"B06009_002E",
"B06009_003E",
"B19001_001E",
"B19001_014E",
"B19001_015E",
"B19001_016E",
"B19001_017E",
"B19001A_001E"
)
) %>%
transmute(
tract = paste0(state, county, tract),
perc_college = 1 - (B06009_002E + B06009_003E) / B06009_001E,
perc_over100k = (B19001_014E + B19001_015E + B19001_016E + B19001_017E) / B19001_001E,
perc_white = B19001A_001E / B19001_001E
) %>%
filter(
!is.na(perc_college),
!is.na(perc_over100k),
!is.na(perc_white)
)
install.packages("corrplot")
library(corrplot)
correlationplot <- bay_multiple_tract %>%
select(
perc_white,
perc_college,
perc_over100k
) %>%
cor()
corrplot(
correlationplot,
method = "number",
type = "upper"
)
ggplot(
data = bay_multiple_tract,
aes(
x = perc_white,
y = perc_college
)
) +
geom_point() +
geom_smooth(method = "lm")
summary(model)
model <- lm(perc_college ~ perc_white, bay_multiple_tract)
summary(model)
ggplot(
data = bay_multiple_tract,
aes(
x = perc_white,
y = perc_over100k
)
) +
geom_point() +
geom_smooth(method = "lm")
model <- lm(perc_over100k ~ perc_white, bay_multiple_tract)
summary(model)
ggplot(
data = bay_multiple_tract,
aes(
x = perc_college,
y = perc_over100k
)
) +
geom_point() +
geom_smooth(method = "lm")
summary(model)
model <- lm(perc_over100k ~ perc_college, bay_multiple_tract)
summary(model)
full_model <- lm(perc_over100k ~ perc_college + perc_white, bay_multiple_tract)
summary(full_model)
ggplot(
data = bay_multiple_tract,
aes(
x = perc_white,
y = perc_over100k
)
) +
geom_point(
aes(
color = perc_college
)
)
install.packages("gtools")
bay_multiple_tract %>%
mutate(
college_round = quantcut(perc_college, 4)
) %>%
ggplot() +
geom_point(
aes(
x = perc_white,
y = perc_over100k,
color = college_round
)
) +
geom_smooth(
aes(
x = perc_white,
y = perc_over100k,
color = college_round
),
method = "lm",
se = F
) +
geom_smooth(
aes(
x = perc_white,
y = perc_over100k
),
method = "lm",
se = F,
color = "black",
linetype = 2
)
library(gtools)
bay_multiple_tract %>%
mutate(
college_round = quantcut(perc_college, 4)
) %>%
ggplot() +
geom_point(
aes(
x = perc_white,
y = perc_over100k,
color = college_round
)
) +
geom_smooth(
aes(
x = perc_white,
y = perc_over100k,
color = college_round
),
method = "lm",
se = F
) +
geom_smooth(
aes(
x = perc_white,
y = perc_over100k
),
method = "lm",
se = F,
color = "black",
linetype = 2
)
ggplot(
data = bay_multiple_tract,
aes(
x = perc_white,
y = model$residuals
)
) +
geom_point() +
geom_smooth(method = "lm")
model <- lm(perc_over100k ~ perc_college, bay_multiple_tract)
ggplot(
data = bay_multiple_tract,
aes(
x = perc_white,
y = model$residuals
)
) +
geom_point() +
geom_smooth(method = "lm")
library(car)
install.packages("car")
library(car)
vif(full_model)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(censusapi)
library(sf)
library(tigris)
library(mapview)
library(readxl)
ces4 <- read_excel(
"calenviroscreen40resultsdatadictionary_F_2021.xlsx"
)
setwd("~/Documents/GitHub/cartersun7.github.io")
library(tidyverse)
library(censusapi)
library(sf)
library(tigris)
library(mapview)
library(readxl)
ces4 <- read_excel(
"calenviroscreen40resultsdatadictionary_F_2021.xlsx"
)
ces4_clean <- ces4 %>%
#select(!ends_with("Pctl"))
select("Census Tract", "Total Population","California County","ZIP","Approximate Location","Longitude", "Latitude", "PM2.5","Asthma")
ca_tracts <- tracts("CA", county = 085)
ces4_map <- ces4_clean %>%
left_join(
ca_tracts %>%
transmute(GEOID = GEOID %>% as.numeric()),
by = c("Census Tract" = "GEOID")
) %>%
st_as_sf()
View(ces4_clean)
View(ces4_map)
View(ca_tracts)
View(ces4)
ca_tracts <- tracts("CA", county = 085)
ces4_map <- ces4_clean %>%
left_join(
ca_tracts %>%
transmute(GEOID = GEOID %>% as.numeric()),
by = c("Census Tract" = "GEOID")
) %>%
st_as_sf()
mapview(ces4_map, zcol = "Asthma")
mapview(ces4_map, zcol = "PM2.5")
ggplot(
data = ces4_map,
aes(
x = PM2.5,
y = Asthma
)
) +
geom_point() +
geom_smooth(method="lm")
model <- lm(Asthma ~ PM2.5, ces4_map)
summary(model)
plot(density(residuals(model)))
ggplot(
data = ces4_map,
aes(
x = PM2.5,
y = log(Asthma)
)
) +
geom_point() +
geom_smooth(method="lm")
log_model <- lm(log(Asthma) ~ PM2.5, ces4_map)
summary(log_model)
plot(density(residuals(log_model)))
ggplot(
data = ces4_map,
aes(
x = PM2.5,
y = log(Asthma)
)
) +
geom_point() +
geom_smooth(method="lm")

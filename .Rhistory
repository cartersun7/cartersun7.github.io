sort()
),
PUMA = PUMA %>%
factor(
levels = sf_pums$PUMA %>%
unique() %>%
as.numeric() %>%
sort()
)
)
sf_pums_logit <- sf_pums %>%
mutate(
BLD = BLD %>%
factor(
levels = sf_pums$BLD %>%
unique() %>%
as.numeric() %>%
sort()
),
TEN = TEN %>%
factor(
levels = sf_pums$TEN %>%
unique() %>%
as.numeric() %>%
sort()
),
MV = MV %>%
factor(
levels = sf_pums$MV %>%
unique() %>%
as.numeric() %>%
sort()
),
PUMA = PUMA %>%
factor(
levels = sf_pums$PUMA %>%
unique() %>%
as.numeric() %>%
sort()
)
)
View(sf_pums_logit)
View(sf_pums)
sf_pums_logit <- sf_pums %>%
mutate(
BLD = BLD %>%
factor(
levels = sf_pums$BLD %>%
unique() %>%
as.numeric() %>%
sort()
),
TEN = TEN %>%
factor(
levels = sf_pums$TEN %>%
unique() %>%
as.numeric() %>%
sort()
),
MV = MV %>%
factor(
levels = sf_pums$MV %>%
unique() %>%
as.numeric() %>%
sort()
),
PUMA = PUMA %>%
factor(
levels = sf_pums$PUMA %>%
unique() %>%
sort()
)
)
View(sf_pums_logit)
View(sf_pums_logit)
logit_model <- glm(
leadrisk ~ BLD + TEN + MV + PUMA,
family = quasibinomial(),
data = sf_pums_logit
)
summary(logit_model)
logit_model <- glm(
leadrisk ~ BLD + TEN + MV + PUMA,
family = quasibinomial(),
data = sf_pums_logit
)
summary(logit_model)
predict(logit_model, sample_n(sf_pums_logit,1), type = "response")
predicted_scores <-
(logit_model, sf_pums_logit, type = "response")
predicted_scores <-
predict(logit_model, sf_pums_logit, type = "response")
predicted_scores <-
predict(logit_model, sf_pums_logit, type = "response")
sf_pums_logit <-
cbind(predicted_scores)
View(sf_pums_logit)
cbind(predicted_scores)
predicted_scores <-
predict(logit_model, sf_pums_logit, type = "response")
test = cbind(predicted_scores)
predicted_scores <-
predict(logit_model, sf_pums_logit, type = "response")
pums_2019_1yr <- readRDS("a6_pums.rds")
ca_pumas <-
pumas("CA", cb = T, progress_bar = F)
sf_boundary <-
counties("CA", cb = T, progress_bar = F) %>%
filter(NAME == "San Francisco")
sf_pumas <-
ca_pumas %>%
st_centroid() %>%
.[sf_boundary, ] %>%
st_drop_geometry() %>%
left_join(ca_pumas %>% select(GEOID10)) %>%
st_as_sf()
sf_pums <- pums_2019_1yr %>%
mutate(
PUMA = str_pad(public_use_microdata_area,5,"left","0")
) %>%
filter(PUMA %in% sf_pumas$PUMACE10) %>%
filter(as.numeric(YBL) %in% 1:3) %>%
group_by(SERIALNO) %>%
summarize(WGTP = first(WGTP), YBL = first(YBL), BLD = first(BLD), TEN = first(TEN), MV = first(MV), AGEP = min(AGEP), HINCP = first(HINCP), PUMA = first(PUMA)) %>%
mutate(
leadrisk = ifelse(
(HINCP >= 90000) & (AGEP <= 6),
1,
0
)
)
sf_pums_logit <- sf_pums %>%
mutate(
BLD = BLD %>%
factor(
levels = sf_pums$BLD %>%
unique() %>%
as.numeric() %>%
sort()
),
TEN = TEN %>%
factor(
levels = sf_pums$TEN %>%
unique() %>%
as.numeric() %>%
sort()
),
MV = MV %>%
factor(
levels = sf_pums$MV %>%
unique() %>%
as.numeric() %>%
sort()
),
PUMA = PUMA %>%
factor(
levels = sf_pums$PUMA %>%
unique() %>%
sort()
)
)
logit_model <- glm(
leadrisk ~ BLD + TEN + MV + PUMA,
family = quasibinomial(),
data = sf_pums_logit
)
summary(logit_model)
predict(logit_model, sample_n(sf_pums_logit,1), type = "response")
predicted_scores <-
predict(logit_model, sf_pums_logit, type = "response")
test = cbind(predicted_scores)
matrix <-
test %>%
mutate(
leadrisk = ifelse(
leadrisk == 1,
"Yes (Leadrisk)",
"No (No Leadrisk)"
) %>%
pull(sf_pums_logit$leadrisk) %>%
table(predicted_scores > 0.5)
)
matrix <-
test %>%
mutate(
leadrisk = ifelse(
leadrisk == 1,
"Yes (Leadrisk)",
"No (No Leadrisk)"
)
) %>%
pull(sf_pums_logit$leadrisk) %>%
table(predicted_scores > 0.5)
matrix <-
test %>%
mutate(
leadrisk = ifelse(
leadrisk == 1,
"Yes (Leadrisk)",
"No (No Leadrisk)"
)
) %>%
pull(sf_pums_logit$leadrisk) %>%
table(predicted_scores > 0.5)
predicted_scores <-
predict(logit_model, sf_pums_logit, type = "response")
test = cbind(sf_pums_logit, predicted_scores)
View(test)
matrix <-
test %>%
mutate(
leadrisk = ifelse(
leadrisk == 1,
"Yes (Leadrisk)",
"No (No Leadrisk)"
)
) %>%
pull(leadrisk) %>%
table(predicted_scores > 0.5)
)
matrix <-
test %>%
mutate(
leadrisk = ifelse(
leadrisk == 1,
"Yes (Leadrisk)",
"No (No Leadrisk)"
)
) %>%
pull(leadrisk) %>%
table(predicted_scores > 0.5)
matrix <-
test %>%
mutate(
leadrisk = ifelse(
leadrisk == 1,
"Yes (Leadrisk)",
"No (No Leadrisk)"
)
) %>%
pull(leadrisk) %>%
table(predicted_scores > 0.5)
matrix
matrix <-
test %>%
mutate(
leadrisk = ifelse(
leadrisk == 1,
"Yes (Leadrisk)",
"No (No Leadrisk)"
)
) %>%
pull(leadrisk) %>%
table(predicted_scores > 0)
matrix
matrix <-
test %>%
mutate(
leadrisk = ifelse(
leadrisk == 1,
"Yes (Leadrisk)",
"No (No Leadrisk)"
)
) %>%
pull(leadrisk) %>%
table(predicted_scores > 0.5)
matrix
View(test)
predicted_scores <-
predict(logit_model, sf_pums_logit, type = "response")
test = cbind(sf_pums_logit, predicted_scores) %>% groupby(leadrisk, predicted_scores)
predicted_scores <-
predict(logit_model, sf_pums_logit, type = "response")
test = cbind(sf_pums_logit, predicted_scores) %>% group_by(leadrisk, predicted_scores)
matrix <-
test %>%
mutate(
leadrisk = ifelse(
leadrisk == 1,
"Yes (Leadrisk)",
"No (No Leadrisk)"
)
) %>%
pull(leadrisk) %>%
table(predicted_scores > 0.5)
matrix
View(test)
predicted_scores <-
predict(logit_model, sf_pums_logit, type = "response")
test = cbind(sf_pums_logit, predicted_scores) %>% summarize(leadrisk, predicted_scores)
View(test)
matrix <-
test %>%
mutate(
leadrisk = ifelse(
leadrisk == 1,
"Yes (Leadrisk)",
"No (No Leadrisk)"
)
) %>%
pull(leadrisk) %>%
table(predicted_scores > 0.5)
matrix
View(test)
View(test)
summary_2x2 <-
test %>%
mutate(
english = ifelse(
english == 1,
"Yes (English)",
"No (ESL)"
)
) %>%
pull(english) %>%
table(test_predicted > 0.5)
test_predicted <-
predict(train_model, newdata = test, type = "response")
sample <- sample(
c(TRUE, FALSE),
nrow(bay_pums_language),
replace = T,
prob = c(0.8,0.2)
)
bay_pums_language <-
bay_pums %>%
mutate(
AGEP = as.numeric(AGEP),
white = ifelse(
RAC1P == "1",
1,
0
),
hispanic = ifelse(
HISP == "1",
0,
1
),
english = ifelse(
LANX == "1",
0,
1
)
) %>%
filter(AGEP >= 5)
bay_multiple_tract <-
getCensus(
name = "acs/acs5",
vintage = 2019,
region = "tract:*",
regionin = "state:06+county:001,013,041,055,075,081,085,095,097",
vars = c(
"B06009_001E",
"B06009_002E",
"B06009_003E",
"B19001_001E",
"B19001_014E",
"B19001_015E",
"B19001_016E",
"B19001_017E",
"B19001A_001E"
)
) %>%
transmute(
tract = paste0(state, county, tract),
perc_college = 1 - (B06009_002E + B06009_003E) / B06009_001E,
perc_over100k = (B19001_014E + B19001_015E + B19001_016E + B19001_017E) / B19001_001E,
perc_white = B19001A_001E / B19001_001E
) %>%
filter(
!is.na(perc_college),
!is.na(perc_over100k),
!is.na(perc_white)
)
model <- lm(perc_over100k ~ perc_college, bay_multiple_tract)
summary(model)
bay_multiple_tract_duplicated <- rbind(bay_multiple_tract,bay_multiple_tract)
model <- lm(perc_over100k ~ perc_college, bay_multiple_tract_duplicated)
summary(model)
years <- 2013:2019
quarters <- 1:4
pge_data <- NULL
for(year in years) {
for(quarter in quarters) {
filename <-
paste0(
"pge/PGE_",
year,
"_Q",
quarter,
"_ElectricUsageByZip.csv"
)
temp <- read_csv(filename)
pge_data <-
rbind(pge_data,temp)
}
}
ca_tracts <- tracts("CA", progress_bar = F)
bay_education_centroid <- bay_multiple_tract %>%
left_join(
ca_tracts,
by = c("tract" = "GEOID")
) %>%
st_as_sf() %>%
st_centroid() %>%
select(tract, perc_college)
bay_education_lag <- bay_education_centroid %>%
mutate(
nearest = st_nearest_feature(.)
) %>%
left_join(
bay_education_centroid %>%
st_drop_geometry() %>%
transmute(
index = row_number(),
perc_college_lag = perc_college
),
by = c("nearest" = "index")
)
pums_2019_1yr <- getCensus(
name = "acs/acs1/pums",
vintage = 2019,
region = "public use microdata area:*",
regionin = "state:06",
vars = c(
"SERIALNO",
"SPORDER",
"PWGTP",
"WGTP",
"AGEP",
"SCHL",
"PINCP",
"RAC1P",
"HISP",
"LANX"
)
)
matrix <-
test %>%
mutate(
leadrisk = ifelse(
leadrisk == 1,
"Yes (Leadrisk)",
"No (No Leadrisk)"
)
) %>%
pull(leadrisk) %>%
table(predicted_scores > 0.1)
matrix
predicted_scores <-
predict(logit_model, sf_pums_logit, type = "response")
test = cbind(sf_pums_logit, predicted_scores) %>% summarize(predicted_scores, leadrisk)
matrix <-
test %>%
mutate(
leadrisk = ifelse(
leadrisk == 1,
"Yes (Leadrisk)",
"No (No Leadrisk)"
)
) %>%
pull(leadrisk) %>%
table(predicted_scores > 0.1)
matrix
matrix <-
test %>%
mutate(
leadrisk = ifelse(
leadrisk == 1,
"No (No Leadrisk",
"Yes (Yes Leadrisk"
)
) %>%
pull(leadrisk) %>%
table(predicted_scores > 0.1)
matrix
matrix <-
test %>%
mutate(
leadrisk = ifelse(
leadrisk == 0,
"No (No Leadrisk)",
"Yes (Yes Leadrisk)"
)
) %>%
pull(leadrisk) %>%
table(predicted_scores > 0.1)
matrix
matrix <-
test %>%
mutate(
leadrisk = ifelse(
leadrisk == 1,
"No (No Leadrisk)",
"Yes (Yes Leadrisk)"
)
) %>%
pull(leadrisk) %>%
table(predicted_scores > 0.1)
matrix
matrix <-
test %>%
mutate(
leadrisk = ifelse(
leadrisk == 0,
"No (No Leadrisk)",
"Yes (Yes Leadrisk)"
)
) %>%
pull(leadrisk) %>%
table(predicted_scores > 0.1)
matrix
